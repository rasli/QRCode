<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <ControlTemplate x:Key="ButtonEmpty"
                     TargetType="{x:Type Button}">
            <Border x:Name="Border"
                BorderThickness="0"
                
                TextBlock.Foreground="{DynamicResource MarkerBrush}"
                TextBlock.FontWeight="Regular"
                TextBlock.TextAlignment="Left"    
                TextBlock.FontSize="14px"
                Height="auto">

            <Border.Background>
                <SolidColorBrush Color="Transparent"/>
            </Border.Background>

            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                <Setter Property="Opacity" Value="0.6"></Setter>
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">



            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <!--<Setter TargetName="Border"
                        Property="Background"
                        Value="#000000" />-->
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="ButtonEmptyActive"
                     TargetType="{x:Type Button}">
        <Border x:Name="Border"
               
                TextBlock.Foreground="#fff"
                TextBlock.FontWeight="Regular"
                TextBlock.TextAlignment="Left"    
                TextBlock.FontSize="14px"
                
                Height="auto">

            <Border.Background>
                <SolidColorBrush Color="#e7f0fa"/>
            </Border.Background>

            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                <Setter Property="Opacity" Value="0.6"></Setter>
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">



            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <!--<Setter TargetName="Border"
                        Property="Background"
                        Value="#000000" />-->
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonPrimary"
                     TargetType="{x:Type Button}">
        <Border x:Name="Border"
        TextBlock.Foreground="{DynamicResource MarkerInvertedBrush}"
         Background="{DynamicResource AccentBrush}"
        CornerRadius="3"
         Padding="16 5"
         Margin="5 0 5 0">
        <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource AccentMouseOverBrush}" />
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">
                
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource AccentPressedBrush}" />
                
            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#000000" />
            </Trigger>

        </ControlTemplate.Triggers>
        
    </ControlTemplate>

   

    <ControlTemplate x:Key="ButtonDanger"
                     TargetType="{x:Type Button}">
        <Border x:Name="Border"
        TextBlock.Foreground="{DynamicResource MarkerInvertedBrush}"
         Background="{DynamicResource ErrorColor}"
        CornerRadius="3"
         Padding="16 5"
         Margin="5 0 5 0">
            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource ErrorColor}" />
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">

                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource ErrorColor}" />

            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource ReadOnlyBackgroundBrush}" />
            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="ButtonSuccess"
                     TargetType="{x:Type Button}">
        <Border x:Name="Border"
        TextBlock.Foreground="{DynamicResource MarkerInvertedBrush}"
         Background="{DynamicResource SuccessColor}"
        CornerRadius="3"
         Padding="16 5"
         Margin="5 0 5 0">
            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource SuccessColor}" />
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">

                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource SuccessColor}" />

            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource ReadOnlyBackgroundBrush}" />
            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="CameraButton"  TargetType="{x:Type Button}">
        <Border x:Name="Border"
        TextBlock.Foreground="{DynamicResource MarkerBrush}"
         Background="{DynamicResource AccentPressedBrush}"     
         Height="35" 
                Margin="0 0 5 0"
                Opacity="0.8">

            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource HoverBackgroundBrush}" />
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">
                <Setter TargetName="Border"
                        Property="BorderThickness"
                        Value="1" />
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="#3ac162" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#3ac162" />
                <Setter TargetName="Border"
                        Property="TextBlock.Foreground"
                        Value="#ccc" />
            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#000000" />
            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="ButtonTogglePrimary"
                     TargetType="{x:Type Button}">
        <Border x:Name="Border"
                
                TextBlock.Foreground="{DynamicResource MainBrush}"
                TextBlock.FontWeight="Regular"
                TextBlock.FontSize="12px"
                Margin="0 4 8 10"
                Height="28"
                TextBlock.TextAlignment="Left"
                CornerRadius="15"
                MinWidth="100px">

            <Border.Background>
                <SolidColorBrush Color="{DynamicResource SuccessColor}"/>
            </Border.Background>

            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="Red" />
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">
                <Setter TargetName="Border"
                        Property="BorderThickness"
                        Value="1" />
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="#3ac162" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#3ac162" />
                <Setter TargetName="Border"
                        Property="TextBlock.Foreground"
                        Value="#ccc" />
            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#000000" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonToggleDanger"
                     TargetType="{x:Type Button}">
        <Border x:Name="Border"
              
                TextBlock.Foreground="{DynamicResource MainBrush}"
                TextBlock.FontWeight="Bold"
                TextBlock.FontSize="13px"
                Margin="0 4 8 10"
                Height="28"
                TextBlock.TextAlignment="Left"
                CornerRadius="15"
                MinWidth="100px">

            <Border.Background>
                <SolidColorBrush Color="{DynamicResource ErrorColor}"/>
            </Border.Background>

            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#3ac162" />
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">
                <Setter TargetName="Border"
                        Property="BorderThickness"
                        Value="1" />
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="#3ac162" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#3ac162" />
                <Setter TargetName="Border"
                        Property="TextBlock.Foreground"
                        Value="#ccc" />
            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#000000" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="WalkthroughButton"
                     TargetType="{x:Type Button}">
        <Border x:Name="Border"
                BorderThickness="0"
                TextBlock.Foreground="#FFFF"
                TextBlock.FontWeight="Regular"
                TextBlock.FontSize="13px"
                Margin="0 4 8 10"
                Height="108"
                TextBlock.TextAlignment="Left"
                MinWidth="50px">

            

            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">
              
                <Setter TargetName="Border"
                        Property="TextBlock.Foreground"
                        Value="#ccc" />
            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#000000" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="toggleButtonWrapper" TargetType="Border">
        <Setter Property="Background" Value="#6291d5"></Setter>
        <Setter Property="Padding" Value="4"></Setter>
        <Setter Property="CornerRadius" Value="15"></Setter>
        <Setter Property="Margin" Value="0 0 0 0"></Setter>
    </Style>

    <ControlTemplate x:Key="Buttontoggle" 
                     TargetType="{x:Type Button}">

        <Border x:Name="Border"
          TextBlock.Foreground="{DynamicResource MarkerInvertedBrush}"
          TextBlock.FontWeight="Normal"
         Background="Transparent"  
         Height="25" 
                >

            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource HoverBackgroundBrush}" />
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">
                <Setter TargetName="Border"
                        Property="BorderThickness"
                        Value="0" />
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="#3ac162" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource HoverBackgroundBrush}" />
                
            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#000000" />
            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="ButtontoggleActive" 
                     TargetType="{x:Type Button}">

        <Border x:Name="Border"
          TextBlock.Foreground="{DynamicResource MarkerInvertedBrush}"
                TextBlock.FontWeight="Bold"
         Background="#FF4FA520"  
         Height="24" 
         CornerRadius="13">

            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="Transparent" />
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">
                <Setter TargetName="Border"
                        Property="BorderThickness"
                        Value="1" />
               
                <Setter TargetName="Border"
                        Property="Background"
                        Value="Transparent" />
                <Setter TargetName="Border"
                        Property="TextBlock.Foreground"
                        Value="#ccc" />
            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#000000" />
            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="ButtontoggleInActive" 
                     TargetType="{x:Type Button}">

        <Border x:Name="Border"
          TextBlock.Foreground="#FFFFFF"
          TextBlock.FontWeight="Bold"
         Background="#f9b954"  
         Height="25" 
         CornerRadius="13">

            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource HoverBackgroundBrush}" />
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">
                <Setter TargetName="Border"
                        Property="BorderThickness"
                        Value="1" />
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="#3ac162" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#3ac162" />
                <Setter TargetName="Border"
                        Property="TextBlock.Foreground"
                        Value="#ccc" />
            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#000000" />
            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="ButtontoggleBlacklisted" 
                     TargetType="{x:Type Button}">

        <Border x:Name="Border"
        TextBlock.Foreground="#fff"
                TextBlock.FontWeight="Bold"
         Background="#ef0800"  
                
         Height="25" 
         CornerRadius="13">

            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource HoverBackgroundBrush}" />
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">
                <Setter TargetName="Border"
                        Property="BorderThickness"
                        Value="1" />
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="#3ac162" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="Transparent" />
                <Setter TargetName="Border"
                        Property="TextBlock.Foreground"
                        Value="#ccc" />
            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#000000" />
            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="ButtonSearch"
                     TargetType="{x:Type Button}">
        <Border x:Name="Border"
                BorderThickness="0"
                TextBlock.Foreground="{DynamicResource AccentFocusedBrush}"
                TextBlock.FontWeight="SemiBold"
                TextBlock.FontSize="14px"
                Padding="10 0 10 3"
                Width="50"
                Margin="0 4 0 0"
                Height="40">

            <Border.Background>
                <SolidColorBrush Color="{DynamicResource AccentPresedBrush }"/>
            </Border.Background>

            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"/>
                <Setter Property="Opacity" Value="0.6"></Setter>
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">



            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#000000" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!-- CUSTOM BUTTON FOR HEADER -->

    <ControlTemplate x:Key="Buttondrop"
                     TargetType="{x:Type Button}">
        <Border x:Name="Border"
             
                TextBlock.Foreground="{DynamicResource MarkerBrush}"
                TextBlock.FontWeight="Regular"
                TextBlock.FontSize="14px"
                Padding="20, 9"
                Height="auto">

            <Border.Background>
                <SolidColorBrush Color="Transparent"/>
            </Border.Background>



            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="Left"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver"
                     Value="True">

                <Setter  Property="Cursor"
                         Value="Hand"
                         />
                <Setter Property="Opacity" Value="0.6"></Setter>
            </Trigger>

            <Trigger Property="IsPressed"
                     Value="True">



            </Trigger>

            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter TargetName="Border"
                        Property="Opacity"
                        Value="0.15" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="#000000" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="buttondrop__icon" TargetType="{x:Type Viewbox}">
        <Setter Property="Canvas.Left" Value="-8"></Setter>
        <Setter Property="Canvas.Top" Value="-3"></Setter>
        <Setter Property="Width" Value="18"></Setter>
        <Setter Property="Height" Value="48"></Setter>
    </Style>






</ResourceDictionary>